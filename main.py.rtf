{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from fastapi import FastAPI, Request\
from fastapi.middleware.cors import CORSMiddleware\
import openai\
import os\
\
app = FastAPI()\
\
app.add_middleware(\
    CORSMiddleware,\
    allow_origins=["*"],\
    allow_credentials=True,\
    allow_methods=["*"],\
    allow_headers=["*"],\
)\
\
openai.api_key = os.getenv("OPENAI_API_KEY")\
\
@app.post("/chat")\
async def chat(request: Request):\
    body = await request.json()\
    prompt = body.get("message", "")\
    \
    if not prompt:\
        return \{"error": "No message received."\}\
\
    try:\
        response = openai.ChatCompletion.create(\
            model="gpt-4o",\
            messages=[\
                \{"role": "system", "content": "Eres una recepcionista profesional de una cl\'ednica dental. Responde de forma clara, c\'e1lida y \'fatil."\},\
                \{"role": "user", "content": prompt\}\
            ],\
            temperature=0.6\
        )\
        content = response['choices'][0]['message']['content']\
        return \{"response": content\}\
    except Exception as e:\
        return \{"error": str(e)\}\
}